use BGT_Billboards;

-- Which organization has booked the highest number of distinct advertising slots
-- across all billboards in June 2025? 
WITH OrgBookings as (
    SELECT 
        o.org_name,
        COUNT(o.org_name) AS slots
    FROM Organization o
        JOIN Content c ON o.org_id = c.org_id
        JOIN Booking b ON c.content_id = b.content_id
    WHERE MONTH(b.start_datetime) = 6 AND YEAR(b.start_datetime) = 2025
    GROUP BY o.org_name
),
Ranked AS (
    SELECT 
        org_name,
        slots,
        RANK() OVER (ORDER BY slots DESC) AS rank
    FROM OrgBookings
)
SELECT * 
FROM Ranked
WHERE rank = 1;

-- What are the top 3 billboards ranked by their total recorded bicycle traffic for 2025?
WITH BikeTraffic AS (
    SELECT
        b.billboard_id,
        b.neighborhood,
        SUM(sr.bike_north + sr.bike_south) AS total
    FROM Sensor_Reading sr
    JOIN Billboard b on sr.sensor_id = b.sensor_id  
    WHERE YEAR(sr.timestamp) = 2025
    GROUP BY b.billboard_id, b.neighborhood
),
RankedBikeTraffic AS (
    SELECT *, RANK() OVER (ORDER BY total DESC) AS rank
    FROM BikeTraffic
)
SELECT * 
FROM RankedBikeTraffic
WHERE rank <= 3;

-- What is the average price for a 1-hour booking slot for billboards in Downtown
-- during morning peak hours (7 am - 9 am) versus evening peak hours (4pm - 6pm)?
WITH DowntownBookings as (
    SELECT 
        b.booking_id, 
        b.quote_price, 
        b.start_datetime, 
        CASE 
            WHEN DATEPART(HOUR, b.start_datetime) BETWEEN 7 AND 8 THEN 'Morning (7-9AM)'
            WHEN DATEPART(HOUR, b.start_datetime) BETWEEN 16 AND 17 THEN 'Evening (4-6PM)'
            ELSE 'Off Peak'
        END AS time_period
    FROM Booking b
    JOIN Billboard bill ON b.billboard_id = bill.billboard_id
    WHERE bill.neighborhood = 'Downtown'
)
SELECT time_period, AVG(quote_price) as avg_price
FROM DowntownBookings
GROUP BY time_period;

-- List all organizations classified as non-profit that have active or upcoming bookings.
SELECT DISTINCT o.org_name
FROM Organization o 
JOIN Content c ON o.org_id = c.org_id
JOIN Booking b on c.content_id = b.content_id
WHERE o.type = 'non-profit' AND
    (
     -- currently active bookings
    b.start_datetime <= GETDATE()
    AND b.end_datetime >= GETDATE()
    -- upcoming
    OR b.start_datetime > GETDATE()
    )
ORDER BY org_name ASC;


-- On average, which direction sees more pedestrian traffic daily across 
-- all sensors in Univeristy District?
WITH PedCount AS (
    SELECT 
        CAST(sr.timestamp AS DATE) AS date,
        SUM(sr.ped_south) AS south,
        SUM(sr.ped_north) as north
    FROM Billboard b
    JOIN Sensor_Reading sr on b.sensor_id = sr.sensor_id
    WHERE b.neighborhood = 'University District'
    GROUP BY CAST(sr.timestamp AS DATE)
)
-- columns that show both average values
SELECT
    AVG(south) as avg_daily_south,
    AVG(north) as avg_daily_north
FROM PedCount;
-- shows answer as text
-- SELECT 
--     CASE 
--         WHEN AVG(south) > AVG(north) THEN 'South has more pedestrian traffic'
--         WHEN AVG(south) < AVG(north) THEN 'North has more pedestrian traffic'
--         ELSE 'Tie'
--     END AS Answer
-- FROM PedCount;



